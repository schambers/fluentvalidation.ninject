<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:Ninject.Web.Mvc.NinjectControllerFactory">
            <summary>
            A controller factory that creates <see cref="T:System.Web.Mvc.IController"/>s via Ninject.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.#ctor(Ninject.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Web.Mvc.NinjectControllerFactory"/> class.
            </summary>
            <param name="kernel">The kernel that should be used to create controllers.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
            <summary>
            Gets a controller instance of type controllerType.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="controllerType">Type of controller to create.</param>
            <returns>The controller instance.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectControllerFactory.CreateActionInvoker">
            <summary>
            Creates the action invoker.
            </summary>
            <returns>The action invoker.</returns>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectControllerFactory.Kernel">
            <summary>
            Gets the kernel that will be used to create controllers.
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectActionInvoker">
            <summary>
            An <see cref="T:System.Web.Mvc.IActionInvoker"/> that injects filters with dependencies.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.#ctor(Ninject.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Web.Mvc.NinjectActionInvoker"/> class.
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
            <summary>
            Gets the filters for the specified request and action.
            </summary>
            <param name="controllerContext">The controller context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
            <returns>The filters.</returns>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectActionInvoker.Kernel">
            <summary>
            Gets or sets the kernel.
            </summary>
        </member>
        <member name="T:Ninject.Web.Mvc.NinjectHttpApplication">
            <summary>
            Defines an <see cref="T:System.Web.HttpApplication"/> that is controlled by a Ninject <see cref="T:Ninject.IKernel"/>.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.Application_Start">
            <summary>
            Starts the application.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.Application_Stop">
            <summary>
            Stops the application.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.CreateKernel">
            <summary>
            Creates the kernel that will manage your application.
            </summary>
            <returns>The created kernel.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.CreateControllerFactory">
            <summary>
            Creates the controller factory that is used to create the controllers.
            </summary>
            <returns>The created controller factory.</returns>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.OnApplicationStarted">
            <summary>
            Called when the application is started.
            </summary>
        </member>
        <member name="M:Ninject.Web.Mvc.NinjectHttpApplication.OnApplicationStopped">
            <summary>
            Called when the application is stopped.
            </summary>
        </member>
        <member name="P:Ninject.Web.Mvc.NinjectHttpApplication.Kernel">
            <summary>
            Gets the kernel.
            </summary>
        </member>
    </members>
</doc>
